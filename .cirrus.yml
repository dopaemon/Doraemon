env:
    CIRRUS_CLONE_DEPTH: 1
    CIRRUS_WORKING_DIR: "/tmp/ci"

    VERSIONS: "0.0.1"

    DEBIAN_FRONTEND: "noninteractive"

    TOKEN: "ENCRYPTED[c423f84cf172cbebabd85e9bcd7ccec097e52ec7f250c8ca5b4590f38d5681017de24c95d20f575a9625d204474fd673]"
    EMAIL: "ENCRYPTED[48d5be342dbaa8e34813b9df38c498834e66d86bd3b688749d2bccd2afa202c0326dd4717a4819affac3b1da78e87a3e]"
    UNAME: "ENCRYPTED[f81d044ec8ee7041a8c2a8c844db183b366ba7d2ed7056ce00db5e657a569d1d9085fd03a0d81d45c26e29500c556c90]"
    TLGTK: "ENCRYPTED[dd141e916858d9abb18672ed480a89f19a46bf81d6314f735d849c77690010edc0f345216bfed2a6cbb06da70903b8d4]"
    SSHKEY1: "ENCRYPTED[cefc2efac385937bea2da85489570a0a046b8e0fcb9c9c469e86ccfc337bdf26f5cf290dd5d313b881215424af5716d8]"
    SSHKEY2: "ENCRYPTED[910b1aa704442b6095fb01568163b348665d1dc496a2887bad5a853a8eaf0c2ceab8cc6ecf53f3e9b546a7d62677524a]"

task:
  name: master
  timeout_in: 2h
  container:
    image: dopaemon/bionic:latest
    cpu: 4
    memory: 8G

  packages_script:
    - rm -rf *
    - sudo apt update
    - sudo apt-get install -y software-properties-common python3 curl zip wget ccache rclone git-lfs bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev pigz git
    - sudo /usr/bin/apt-key adv --no-tty --keyserver hkp://keyserver.ubuntu.com:80 --recv C99B11DEB97541F0
    - sudo apt-get update
    - sudo apt-get install gh -y
  ssh_script:
    - mkdir -p ~/.ssh
    - sudo chmod 700 ~/.ssh/
    - sudo rm -rf /root/.ssh
    - ssh-keyscan -H github.com >> ~/.ssh/known_hosts
    - touch ~/.ssh/id_ed25519.pub
    - touch ~/.ssh/id_ed25519
    - echo "$SSHKEY1" > ~/.ssh/id_ed25519.pub
    - echo "$SSHKEY2" > ~/.ssh/id_ed25519
    - sudo chmod 400 ~/.ssh/*
    - ssh-keygen -R $(curl ifconfig.me)
  github_script:
    - git config --global user.name "$UNAME"
    - git config --global user.email "$EMAIL"
  cfolder_script:
    - mkdir -p /tmp/ci/Kernel
    - mkdir -p /tmp/ci/Kernel/Upload
    - mkdir -p /tmp/ci/Kernel/Telegram
  clone_script:
    - cd /tmp/ci/Kernel
    - git clone -b master --single-branch https://github.com/dopaemon/Doraemon.git /tmp/ci/Kernel/Source
    - git clone -b master --single-branch --depth="1" https://github.com/kdrag0n/proton-clang.git /tmp/ci/Kernel/clang
    - git clone -b master --single-branch --depth="1" https://github.com/radcolor/aarch64-linux-gnu.git /tmp/ci/Kernel/gcc64/
    - git clone -b master --single-branch --depth="1" https://github.com/radcolor/arm-linux-gnueabi.git /tmp/ci/Kernel/gcc32/
  export_script:
    - touch ~/.kernel
    - echo "export CAF="LA.UM.9.1.r1-11800-SMxxx0.0"" >> ~/.kernel
    - echo "export NAME="Doraemon-Kernel-$(date +"%d%m%Y")"" >> ~/.kernel
    - echo "export TIME="$(date +"%d%m%Y")"" >> ~/.kernel
    - echo "export DATETG="$(date +"%d/%m/%Y")"" >> ~/.kernel
    - echo "export TIMETG="$(date +"%H:%M:%S")"" >> ~/.kernel
    - echo "export CC=clang" >> ~/.kernel
    - echo "export ARCH=arm64" >> ~/.kernel
    - echo "export SUBARCH=arm64" >> ~/.kernel
    - echo "export DTC_EXT=dtc"
    - echo "export CROSS_COMPILE=/tmp/ci/Kernel/gcc64/bin/aarch64-linux-gnu-" >> ~/.kernel
    - echo "export CROSS_COMPILE_ARM32=/tmp/ci/Kernel/gcc32/bin/arm-linux-gnueabi-" >> ~/.kernel
    - echo "export PATH="/tmp/ci/Kernel/clang/bin:${PATH}"" >> ~/.kernel

  oss_kernel_script:
    - source ~/.kernel
    - cd /tmp/ci/Kernel/Source
    - export D='"'
    - echo CONFIG_LOCALVERSION="$D"-"$NAME"-OSS"$D" >> arch/arm64/configs/vendor/sweet_user_defconfig
  oss_compile_script:
    - source ~/.kernel
    - cd /tmp/ci/Kernel/Source
    - make O=out sweet_user_defconfig
    - make -j$(nproc --all) O=out ARCH=arm64 CC=clang CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=/tmp/ci/Kernel/gcc64/bin/aarch64-linux-gnu- CROSS_COMPILE_ARM32=/tmp/ci/Kernel/gcc32/bin/arm-linux-gnueabi- |& tee ~/$TIME.txt
  oss_dtbo_script:
    - cd /tmp/ci/Kernel/Source/out/arch/arm64/boot/
    - curl https://android.googlesource.com/platform/external/avb/+/refs/heads/master/avbtool.py?format=TEXT | base64 --decode > avbtool.py
    - chmod +x avbtool.py
    - python3 avbtool.py add_hash_footer --image dtbo.img --partition_size=33554432 --partition_name dtbo
  oss_flashable_script:
    - source ~/.kernel
    - mkdir -p /tmp/ci/flashable
    - cd /tmp/ci/flashable
    - git clone -b sweet --depth="1" https://github.com/KernelPanic-OpenSource/AnyKernel3.git zip
    - cp -r /tmp/ci/Kernel/Source/out/arch/arm64/boot/Image.gz /tmp/ci/flashable/zip/
    - cp -r /tmp/ci/Kernel/Source/out/arch/arm64/boot/dtbo.img /tmp/ci/flashable/zip/
    - cd zip
    - zip -rv9 "$NAME"-OSS.zip *
  oss_zipSigner_script:
    - source ~/.kernel
    - cd /tmp/ci/flashable/zip/
    - curl -sLo zipsigner-4.0.jar https://github.com/baalajimaestro/AnyKernel3/raw/master/zipsigner-4.0.jar
    - java -jar zipsigner-4.0.jar "$NAME"-OSS.zip "$NAME"-OSS-signed.zip
    - echo "export OSS_ZIP_NAME=$NAME-OSS-signed.zip" >> ~/.kernel
    - mv *.zip /tmp/ci/Kernel/Upload/

  clear_script:
    - rm -rvf /tmp/ci/Kernel/Source/out
    - rm -rvf /tmp/ci/flashable/zip

  miui_kernel_script:
    - source ~/.kernel
    - cd /tmp/ci/Kernel/Source
    - git checkout HEAD arch/arm64/configs/vendor/sweet_user_defconfig
    - git fetch https://github.com/KernelPanic-OpenSource/android_kernel_xiaomi_sweet.git master-miui
    - git cherry-pick fb60d33f73d3f6980800b17845273bc9506acae8
    - export D='"'
    - echo CONFIG_LOCALVERSION="$D"-"$NAME"-Miui"$D" >> arch/arm64/configs/vendor/sweet_user_defconfig
  miui_compile_script:
    - source ~/.kernel
    - cd /tmp/ci/Kernel/Source
    - make O=out sweet_user_defconfig
    - make -j$(nproc --all) O=out ARCH=arm64 CC=clang CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=/tmp/ci/Kernel/gcc64/bin/aarch64-linux-gnu- CROSS_COMPILE_ARM32=/tmp/ci/Kernel/gcc32/bin/arm-linux-gnueabi- |& tee ~/$TIME.txt
  miui_dtbo_script:
    - cd /tmp/ci/Kernel/Source/out/arch/arm64/boot/
    - curl https://android.googlesource.com/platform/external/avb/+/refs/heads/master/avbtool.py?format=TEXT | base64 --decode > avbtool.py
    - chmod +x avbtool.py
    - python3 avbtool.py add_hash_footer --image dtbo.img --partition_size=33554432 --partition_name dtbo
  miui_flashable_script:
    - source ~/.kernel
    - mkdir -p /tmp/ci/flashable
    - cd /tmp/ci/flashable
    - git clone -b sweet --depth="1" https://github.com/KernelPanic-OpenSource/AnyKernel3.git zip
    - cp -r /tmp/ci/Kernel/Source/out/arch/arm64/boot/Image.gz /tmp/ci/flashable/zip/
    - cp -r /tmp/ci/Kernel/Source/out/arch/arm64/boot/dtbo.img /tmp/ci/flashable/zip/
    - cd zip
    - zip -rv9 "$NAME"-MIUI.zip *
  miui_zipSigner_script:
    - source ~/.kernel
    - cd /tmp/ci/flashable/zip/
    - curl -sLo zipsigner-4.0.jar https://github.com/baalajimaestro/AnyKernel3/raw/master/zipsigner-4.0.jar
    - java -jar zipsigner-4.0.jar "$NAME"-MIUI.zip "$NAME"-MIUI-signed.zip
    - echo "export MIUI_ZIP_NAME=$NAME-MIUI-signed.zip" >> ~/.kernel
    - mv *.zip /tmp/ci/Kernel/Upload/

  telegram_script:
    - source ~/.kernel
    - curl -F document=@"/tmp/ci/Kernel/Upload/$OSS_ZIP_NAME" https://api.telegram.org/bot$TLGTK/sendDocument?chat_id=@KernelPanic_OpenSource_CI
    - curl -F document=@"/tmp/ci/Kernel/Upload/$MIUI_ZIP_NAME" https://api.telegram.org/bot$TLGTK/sendDocument?chat_id=@KernelPanic_OpenSource_CI

  release_script:
    - cd /tmp/ci/Kernel/Upload/
    - gh config set git_protocol ssh --host github.com
    - touch mytoken.txt
    - echo "$TOKEN" > mytoken.txt
    - gh auth login --with-token < mytoken.txt
    - bash <(curl -Ls https://raw.githubusercontent.com/dopaemon/x-ui/main/release.sh)
    - echo "yes" | gh release create $VERSIONS /tmp/ci/Kernel/Upload/* --title "Doraemon Kernel - Weekly - $(date +"%d-%m-%Y")"

  checkout_script:
    - ls /tmp/ci/Kernel/Source/out/arch/arm64/boot/
    - ls /tmp/ci/flashable/zip/
    - ls /tmp/ci/Kernel/Upload/
